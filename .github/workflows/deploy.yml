name: Build and Deploy to Kubernetes

on:
  push:
    branches: [ feature-1 ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  GITHUB_SHA: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/spring-app:${{ github.sha }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Create kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Deploy PostgreSQL to Kubernetes
        run: |
          kubectl apply -f k8s/postgres/postgres-configmap.yaml
          kubectl apply -f k8s/postgres/postgres-secret.yaml
          kubectl apply -f k8s/postgres/postgres-pvc.yaml
          kubectl apply -f k8s/postgres/postgres-deployment.yaml
          kubectl apply -f k8s/postgres/postgres-service.yaml

      - name: Deploy Spring Boot to Kubernetes
        run: |
          envsubst < k8s/app/deployment.yaml > deployment.yaml
          kubectl apply -f deployment.yaml
          kubectl apply -f k8s/app/configmap.yaml
          kubectl apply -f k8s/app/service.yaml

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/spring-app